package model

// Generated by https://quicktype.io

type UserPost struct {
	AwemeList          []AwemeList `json:"aweme_list"`
	HasMore            int64       `json:"has_more"`
	LogPb              LogPb       `json:"log_pb"`
	MaxCursor          int64       `json:"max_cursor"`
	MinCursor          int64       `json:"min_cursor"`
	PostSerial         int64       `json:"post_serial"`
	ReplaceSeriesCover int64       `json:"replace_series_cover"`
	RequestItemCursor  int64       `json:"request_item_cursor"`
	StatusCode         int64       `json:"status_code"`
}

type AwemeList struct {
	AdmireAuth              AdmireAuth            `json:"admire_auth"`
	Anchors                 interface{}           `json:"anchors"`
	Author                  Author                `json:"author"`
	AuthorMaskTag           int64                 `json:"author_mask_tag"`
	AuthorUserID            int64                 `json:"author_user_id"`
	AwemeControl            AwemeControl          `json:"aweme_control"`
	AwemeID                 string                `json:"aweme_id"`
	AwemeType               int64                 `json:"aweme_type"`
	ChallengePosition       interface{}           `json:"challenge_position"`
	ChapterList             interface{}           `json:"chapter_list"`
	CollectStat             int64                 `json:"collect_stat"`
	CommentGid              int64                 `json:"comment_gid"`
	CommentList             interface{}           `json:"comment_list"`
	CommentPermissionInfo   CommentPermissionInfo `json:"comment_permission_info"`
	CommerceConfigData      interface{}           `json:"commerce_config_data"`
	CommonBarInfo           string                `json:"common_bar_info"`
	ComponentInfoV2         string                `json:"component_info_v2"`
	CoverLabels             interface{}           `json:"cover_labels"`
	CreateTime              int64                 `json:"create_time"`
	Desc                    string                `json:"desc"`
	DiggLottie              DiggLottie            `json:"digg_lottie"`
	DisableRelationBar      int64                 `json:"disable_relation_bar"`
	DuetAggregateInMusicTab bool                  `json:"duet_aggregate_in_music_tab"`
	Duration                int64                 `json:"duration"`
	FeedCommentConfig       FeedCommentConfig     `json:"feed_comment_config"`
	Geofencing              []interface{}         `json:"geofencing"`
	GeofencingRegions       interface{}           `json:"geofencing_regions"`
	GroupID                 string                `json:"group_id"`
	GuideBtnType            int64                 `json:"guide_btn_type"`
	HybridLabel             interface{}           `json:"hybrid_label"`
	ImageAlbumMusicInfo     ImageAlbumMusicInfo   `json:"image_album_music_info"`
	ImageInfos              interface{}           `json:"image_infos"`
	Images                  []Image               `json:"images"`
	ImpressionData          ImpressionData        `json:"impression_data"`
	InteractionStickers     interface{}           `json:"interaction_stickers"`
	IsCollectsSelected      int64                 `json:"is_collects_selected"`
	IsDuetSing              bool                  `json:"is_duet_sing"`
	IsImageBeat             bool                  `json:"is_image_beat"`
	IsLifeItem              bool                  `json:"is_life_item"`
	IsStory                 int64                 `json:"is_story"`
	IsTop                   int64                 `json:"is_top"`
	ItemWarnNotification    ItemWarnNotification  `json:"item_warn_notification"`
	LabelTopText            interface{}           `json:"label_top_text"`
	LongVideo               interface{}           `json:"long_video"`
	Music                   Music                 `json:"music"`
	NicknamePosition        interface{}           `json:"nickname_position"`
	OriginCommentIDS        interface{}           `json:"origin_comment_ids"`
	OriginalImages          interface{}           `json:"original_images"`
	PackedClips             interface{}           `json:"packed_clips"`
	PhotoSearchEntrance     PhotoSearchEntrance   `json:"photo_search_entrance"`
	Position                interface{}           `json:"position"`
	PressPanelInfo          string                `json:"press_panel_info"`
	PreventDownload         bool                  `json:"prevent_download"`
	Promotions              []interface{}         `json:"promotions"`
	Region                  string                `json:"region"`
	SeriesPaidInfo          SeriesPaidInfo        `json:"series_paid_info"`
	ShareInfo               AwemeListShareInfo    `json:"share_info"`
	ShareURL                string                `json:"share_url"`
	ShowFollowButton        ShowFollowButton      `json:"show_follow_button"`
	SocialTagList           interface{}           `json:"social_tag_list"`
	StandardBarInfoList     interface{}           `json:"standard_bar_info_list"`
	Statistics              Statistics            `json:"statistics"`
	Status                  Status                `json:"status"`
	TextExtra               []TextExtra           `json:"text_extra"`
	UniqidPosition          interface{}           `json:"uniqid_position"`
	UserDigged              int64                 `json:"user_digged"`
	Video                   Video                 `json:"video"`
	VideoLabels             []interface{}         `json:"video_labels"`
	VideoTag                []VideoTag            `json:"video_tag"`
	VideoText               []interface{}         `json:"video_text"`
	AnchorInfo              *AnchorInfo           `json:"anchor_info,omitempty"`
	AwemeACL                *AwemeACL             `json:"aweme_acl,omitempty"`
	IPAttribution           *string               `json:"ip_attribution,omitempty"`
	IsMultiContent          *int64                `json:"is_multi_content,omitempty"`
}

type AdmireAuth struct {
	AdmireButton       int64 `json:"admire_button"`
	IsAdmire           int64 `json:"is_admire"`
	IsShowAdmireButton int64 `json:"is_show_admire_button"`
	IsShowAdmireTab    int64 `json:"is_show_admire_tab"`
}

type AnchorInfo struct {
	Content  string  `json:"content"`
	Extra    string  `json:"extra"`
	Icon     Icon    `json:"icon"`
	ID       string  `json:"id"`
	LogExtra string  `json:"log_extra"`
	MpURL    *string `json:"mp_url,omitempty"`
	OpenURL  *string `json:"open_url,omitempty"`
	Title    string  `json:"title"`
	TitleTag string  `json:"title_tag"`
	Type     int64   `json:"type"`
	WebURL   *string `json:"web_url,omitempty"`
}

type Icon struct {
	Height   int64    `json:"height"`
	URI      string   `json:"uri"`
	URLKey   *string  `json:"url_key,omitempty"`
	URLList  []string `json:"url_list"`
	Width    int64    `json:"width"`
	DataSize *int64   `json:"data_size,omitempty"`
}

type Author struct {
	AvatarThumb            Icon            `json:"avatar_thumb"`
	ChaList                interface{}     `json:"cha_list"`
	CoverURL               []Icon          `json:"cover_url"`
	CustomVerify           string          `json:"custom_verify"`
	EnterpriseVerifyReason string          `json:"enterprise_verify_reason"`
	FollowStatus           int64           `json:"follow_status"`
	FollowerStatus         int64           `json:"follower_status"`
	Nickname               string          `json:"nickname"`
	PreventDownload        bool            `json:"prevent_download"`
	SECUid                 string          `json:"sec_uid"`
	Secret                 int64           `json:"secret"`
	ShareInfo              AuthorShareInfo `json:"share_info"`
	ShortID                string          `json:"short_id"`
	Signature              string          `json:"signature"`
	Uid                    string          `json:"uid"`
	UniqueID               string          `json:"unique_id"`
	VerificationType       int64           `json:"verification_type"`
}

type AuthorShareInfo struct {
	ShareDesc        string `json:"share_desc"`
	ShareDescInfo    string `json:"share_desc_info"`
	ShareQrcodeURL   Icon   `json:"share_qrcode_url"`
	ShareTitle       string `json:"share_title"`
	ShareTitleMyself string `json:"share_title_myself"`
	ShareTitleOther  string `json:"share_title_other"`
	ShareURL         string `json:"share_url"`
	ShareWeiboDesc   string `json:"share_weibo_desc"`
}

type AwemeACL struct {
	DownloadMaskPanel DownloadMaskPanel `json:"download_mask_panel"`
}

type DownloadMaskPanel struct {
	Code     int64 `json:"code"`
	ShowType int64 `json:"show_type"`
}

type AwemeControl struct {
	CanComment     bool `json:"can_comment"`
	CanForward     bool `json:"can_forward"`
	CanShare       bool `json:"can_share"`
	CanShowComment bool `json:"can_show_comment"`
}

type CommentPermissionInfo struct {
	CanComment              bool  `json:"can_comment"`
	CommentPermissionStatus int64 `json:"comment_permission_status"`
	ItemDetailEntry         bool  `json:"item_detail_entry"`
	PressEntry              bool  `json:"press_entry"`
	ToastGuide              bool  `json:"toast_guide"`
}

type DiggLottie struct {
	CanBomb  int64  `json:"can_bomb"`
	LottieID string `json:"lottie_id"`
}

type FeedCommentConfig struct {
	AuthorAuditStatus int64  `json:"author_audit_status"`
	InputConfigText   string `json:"input_config_text"`
}

type ImageAlbumMusicInfo struct {
	BeginTime int64 `json:"begin_time"`
	EndTime   int64 `json:"end_time"`
	Volume    int64 `json:"volume"`
}

type Image struct {
	DownloadURLList []string    `json:"download_url_list"`
	Height          int64       `json:"height"`
	MaskURLList     interface{} `json:"mask_url_list"`
	URI             string      `json:"uri"`
	URLList         []string    `json:"url_list"`
	Width           int64       `json:"width"`
}

type ImpressionData struct {
	GroupIDListA   []int64     `json:"group_id_list_a"`
	GroupIDListB   []int64     `json:"group_id_list_b"`
	SimilarIDListA interface{} `json:"similar_id_list_a"`
	SimilarIDListB interface{} `json:"similar_id_list_b"`
}

type ItemWarnNotification struct {
	Content string `json:"content"`
	Show    bool   `json:"show"`
	Type    int64  `json:"type"`
}

type Music struct {
	Album                     string           `json:"album"`
	ArtistUserInfos           interface{}      `json:"artist_user_infos"`
	Artists                   []interface{}    `json:"artists"`
	AuditionDuration          int64            `json:"audition_duration"`
	Author                    string           `json:"author"`
	AuthorDeleted             bool             `json:"author_deleted"`
	AuthorPosition            interface{}      `json:"author_position"`
	AuthorStatus              *int64           `json:"author_status,omitempty"`
	AvatarLarge               *Icon            `json:"avatar_large,omitempty"`
	AvatarMedium              *Icon            `json:"avatar_medium,omitempty"`
	AvatarThumb               *Icon            `json:"avatar_thumb,omitempty"`
	BindedChallengeID         int64            `json:"binded_challenge_id"`
	CanBackgroundPlay         bool             `json:"can_background_play"`
	CollectStat               int64            `json:"collect_stat"`
	CoverHD                   Icon             `json:"cover_hd"`
	CoverLarge                Icon             `json:"cover_large"`
	CoverMedium               Icon             `json:"cover_medium"`
	CoverThumb                Icon             `json:"cover_thumb"`
	DmvAutoShow               bool             `json:"dmv_auto_show"`
	DSPStatus                 int64            `json:"dsp_status"`
	Duration                  int64            `json:"duration"`
	EndTime                   int64            `json:"end_time"`
	ExternalSongInfo          []interface{}    `json:"external_song_info"`
	Extra                     string           `json:"extra"`
	ID                        int64            `json:"id"`
	IDStr                     string           `json:"id_str"`
	IsAudioURLWithCookie      bool             `json:"is_audio_url_with_cookie"`
	IsCommerceMusic           bool             `json:"is_commerce_music"`
	IsDelVideo                bool             `json:"is_del_video"`
	IsMatchedMetadata         bool             `json:"is_matched_metadata"`
	IsOriginal                bool             `json:"is_original"`
	IsOriginalSound           bool             `json:"is_original_sound"`
	IsPgc                     bool             `json:"is_pgc"`
	IsRestricted              bool             `json:"is_restricted"`
	IsVideoSelfSee            bool             `json:"is_video_self_see"`
	LunaInfo                  LunaInfo         `json:"luna_info"`
	LyricShortPosition        interface{}      `json:"lyric_short_position"`
	Mid                       string           `json:"mid"`
	MusicChartRanks           interface{}      `json:"music_chart_ranks"`
	MusicImageBeats           *MusicImageBeats `json:"music_image_beats,omitempty"`
	MusicStatus               int64            `json:"music_status"`
	MusicianUserInfos         interface{}      `json:"musician_user_infos"`
	MuteShare                 bool             `json:"mute_share"`
	OfflineDesc               string           `json:"offline_desc"`
	OwnerHandle               string           `json:"owner_handle"`
	OwnerID                   *string          `json:"owner_id,omitempty"`
	OwnerNickname             string           `json:"owner_nickname"`
	PgcMusicType              int64            `json:"pgc_music_type"`
	PlayURL                   Icon             `json:"play_url"`
	Position                  interface{}      `json:"position"`
	PreventDownload           bool             `json:"prevent_download"`
	PreventItemDownloadStatus int64            `json:"prevent_item_download_status"`
	// PreviewEndTime            int64            `json:"preview_end_time"`
	// PreviewStartTime          float64          `json:"preview_start_time"`
	ReasonType        int64            `json:"reason_type"`
	Redirect          bool             `json:"redirect"`
	SchemaURL         string           `json:"schema_url"`
	SearchImpr        SearchImpr       `json:"search_impr"`
	SECUid            *string          `json:"sec_uid,omitempty"`
	ShootDuration     int64            `json:"shoot_duration"`
	SourcePlatform    int64            `json:"source_platform"`
	StartTime         int64            `json:"start_time"`
	Status            int64            `json:"status"`
	StrongBeatURL     *Icon            `json:"strong_beat_url,omitempty"`
	TagList           interface{}      `json:"tag_list"`
	Title             string           `json:"title"`
	UnshelveCountries interface{}      `json:"unshelve_countries"`
	UserCount         int64            `json:"user_count"`
	VideoDuration     int64            `json:"video_duration"`
	MatchedPgcSound   *MatchedPgcSound `json:"matched_pgc_sound,omitempty"`
	Song              *Song            `json:"song,omitempty"`
	Climax            *Climax          `json:"climax,omitempty"`
	CoverColorHsv     *CoverColorHsv   `json:"cover_color_hsv,omitempty"`
}

type Climax struct {
	StartPoint int64 `json:"start_point"`
}

type CoverColorHsv struct {
	H int64 `json:"h"`
	S int64 `json:"s"`
	V int64 `json:"v"`
}

type LunaInfo struct {
	IsLunaUser   bool  `json:"is_luna_user"`
	HasCopyright *bool `json:"has_copyright,omitempty"`
}

type MatchedPgcSound struct {
	Author      string `json:"author"`
	CoverMedium Icon   `json:"cover_medium"`
	MixedAuthor string `json:"mixed_author"`
	MixedTitle  string `json:"mixed_title"`
	Title       string `json:"title"`
}

type MusicImageBeats struct {
	MusicImageBeatsURL Icon `json:"music_image_beats_url"`
}

type SearchImpr struct {
	EntityID string `json:"entity_id"`
}

type Song struct {
	Artists interface{} `json:"artists"`
	ID      int64       `json:"id"`
	IDStr   string      `json:"id_str"`
	Chorus  *Chorus     `json:"chorus,omitempty"`
	Title   *string     `json:"title,omitempty"`
}

type Chorus struct {
	DurationMS int64 `json:"duration_ms"`
	StartMS    int64 `json:"start_ms"`
}

type PhotoSearchEntrance struct {
	EcomType int64 `json:"ecom_type"`
}

type SeriesPaidInfo struct {
	ItemPrice        int64 `json:"item_price"`
	SeriesPaidStatus int64 `json:"series_paid_status"`
}

type AwemeListShareInfo struct {
	ShareLinkDesc string `json:"share_link_desc"`
	ShareURL      string `json:"share_url"`
}

type ShowFollowButton struct {
}

type Statistics struct {
	AdmireCount  int64  `json:"admire_count"`
	AwemeID      string `json:"aweme_id"`
	CollectCount int64  `json:"collect_count"`
	CommentCount int64  `json:"comment_count"`
	DiggCount    int64  `json:"digg_count"`
	PlayCount    int64  `json:"play_count"`
	ShareCount   int64  `json:"share_count"`
}

type Status struct {
	AllowShare        bool         `json:"allow_share"`
	AwemeID           string       `json:"aweme_id"`
	InReviewing       bool         `json:"in_reviewing"`
	IsDelete          bool         `json:"is_delete"`
	IsProhibited      bool         `json:"is_prohibited"`
	ListenVideoStatus int64        `json:"listen_video_status"`
	PartSee           int64        `json:"part_see"`
	PrivateStatus     int64        `json:"private_status"`
	ReviewResult      ReviewResult `json:"review_result"`
}

type ReviewResult struct {
	ReviewStatus int64 `json:"review_status"`
}

type TextExtra struct {
	End         int64  `json:"end"`
	HashtagID   string `json:"hashtag_id"`
	HashtagName string `json:"hashtag_name"`
	IsCommerce  bool   `json:"is_commerce"`
	Start       int64  `json:"start"`
	Type        int64  `json:"type"`
}

type Video struct {
	AnimatedCover  *AnimatedCover `json:"animated_cover,omitempty"`
	BigThumbs      []BigThumb     `json:"big_thumbs"`
	BitRate        []BitRate      `json:"bit_rate"`
	Cover          Icon           `json:"cover"`
	DownloadAddr   *Icon          `json:"download_addr,omitempty"`
	Duration       int64          `json:"duration"`
	DynamicCover   *Icon          `json:"dynamic_cover,omitempty"`
	Height         int64          `json:"height"`
	IsH265         int64          `json:"is_h265"`
	IsSourceHDR    *int64         `json:"is_source_HDR,omitempty"`
	Meta           string         `json:"meta"`
	OriginCover    Icon           `json:"origin_cover"`
	PlayAddr       PlayAddr       `json:"play_addr"`
	PlayAddr265    *PlayAddr      `json:"play_addr_265,omitempty"`
	PlayAddrH264   *PlayAddr      `json:"play_addr_h264,omitempty"`
	Ratio          string         `json:"ratio"`
	UseStaticCover *bool          `json:"use_static_cover,omitempty"`
	Width          int64          `json:"width"`
}

type AnimatedCover struct {
	URI     string   `json:"uri"`
	URLList []string `json:"url_list"`
}

type BigThumb struct {
	Duration float64 `json:"duration"`
	Fext     string  `json:"fext"`
	ImgNum   int64   `json:"img_num"`
	ImgURL   string  `json:"img_url"`
	ImgXLen  int64   `json:"img_x_len"`
	ImgXSize int64   `json:"img_x_size"`
	ImgYLen  int64   `json:"img_y_len"`
	ImgYSize int64   `json:"img_y_size"`
	Interval int64   `json:"interval"`
	URI      string  `json:"uri"`
}

type BitRate struct {
	FPS         int64    `json:"FPS"`
	HDRBit      string   `json:"HDR_bit"`
	HDRType     string   `json:"HDR_type"`
	BitRate     int64    `json:"bit_rate"`
	GearName    string   `json:"gear_name"`
	IsBytevc1   int64    `json:"is_bytevc1"`
	IsH265      int64    `json:"is_h265"`
	PlayAddr    PlayAddr `json:"play_addr"`
	QualityType int64    `json:"quality_type"`
}

type PlayAddr struct {
	DataSize *int64   `json:"data_size,omitempty"`
	FileCS   *string  `json:"file_cs,omitempty"`
	FileHash *string  `json:"file_hash,omitempty"`
	Height   int64    `json:"height"`
	URI      string   `json:"uri"`
	URLKey   string   `json:"url_key"`
	URLList  []string `json:"url_list"`
	Width    int64    `json:"width"`
}

type VideoTag struct {
	Level   int64  `json:"level"`
	TagID   int64  `json:"tag_id"`
	TagName string `json:"tag_name"`
}

type LogPb struct {
	ImprID string `json:"impr_id"`
}
